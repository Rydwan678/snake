{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rydwan\\\\Documents\\\\GitHub\\\\snake\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport StartSite from \"./components/StartSite\";\nimport GameSite from \"./components/GameSite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isStartSite, setIsStartSite] = useState(true);\n  const [settings, setSettings] = useState({\n    audio: true,\n    difficulty: \"EASY\"\n  });\n\n  function changeDifficulty() {\n    const levels = [\"EASY\", \"NORMAL\", \"HARD\"];\n    const currentLevel = levels.findIndex(element => element === settings.difficulty);\n    const nextLevel = levels[currentLevel + 1] ? levels[currentLevel + 1] : levels[0];\n    setSettings(previousSettings => ({ ...previousSettings,\n      difficulty: nextLevel\n    }));\n  }\n\n  function toggleSetting(e) {\n    setSettings(previousSettings => ({ ...previousSettings,\n      [e.target.id]: !e.target.id\n    }));\n  }\n\n  function changePage() {\n    setIsStartSite(previousPage => !previousPage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isStartSite && /*#__PURE__*/_jsxDEV(StartSite, {\n      changePage: changePage,\n      toggleSetting: toggleSetting,\n      changeDifficulty: changeDifficulty,\n      settings: settings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), !isStartSite && /*#__PURE__*/_jsxDEV(GameSite, {\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BxiNZQc74UWYnzHd/0Oz9vu9Ch8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartSite","GameSite","App","isStartSite","setIsStartSite","settings","setSettings","audio","difficulty","changeDifficulty","levels","currentLevel","findIndex","element","nextLevel","previousSettings","toggleSetting","e","target","id","changePage","previousPage"],"sources":["C:/Users/rydwan/Documents/GitHub/snake/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport StartSite from \"./components/StartSite\";\nimport GameSite from \"./components/GameSite\";\n\nexport default function App() {\n  const [isStartSite, setIsStartSite] = useState<boolean>(true);\n\n  const [settings, setSettings] = useState({\n    audio: true,\n    difficulty: \"EASY\",\n  });\n\n  function changeDifficulty() {\n    const levels = [\"EASY\", \"NORMAL\", \"HARD\"];\n    const currentLevel = levels.findIndex(\n      (element) => element === settings.difficulty\n    );\n    const nextLevel = levels[currentLevel + 1]\n      ? levels[currentLevel + 1]\n      : levels[0];\n    setSettings((previousSettings) => ({\n      ...previousSettings,\n      difficulty: nextLevel,\n    }));\n  }\n\n  function toggleSetting(e: React.MouseEvent) {\n    setSettings((previousSettings) => ({\n      ...previousSettings,\n      [(e.target as HTMLInputElement).id]: !(e.target as HTMLInputElement).id,\n    }));\n  }\n\n  function changePage() {\n    setIsStartSite((previousPage) => !previousPage);\n  }\n\n  return (\n    <div>\n      {isStartSite && (\n        <StartSite\n          changePage={changePage}\n          toggleSetting={toggleSetting}\n          changeDifficulty={changeDifficulty}\n          settings={settings}\n        />\n      )}\n      {!isStartSite && <GameSite changePage={changePage} />}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAU,IAAV,CAA9C;EAEA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,IADgC;IAEvCC,UAAU,EAAE;EAF2B,CAAD,CAAxC;;EAKA,SAASC,gBAAT,GAA4B;IAC1B,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAf;IACA,MAAMC,YAAY,GAAGD,MAAM,CAACE,SAAP,CAClBC,OAAD,IAAaA,OAAO,KAAKR,QAAQ,CAACG,UADf,CAArB;IAGA,MAAMM,SAAS,GAAGJ,MAAM,CAACC,YAAY,GAAG,CAAhB,CAAN,GACdD,MAAM,CAACC,YAAY,GAAG,CAAhB,CADQ,GAEdD,MAAM,CAAC,CAAD,CAFV;IAGAJ,WAAW,CAAES,gBAAD,KAAuB,EACjC,GAAGA,gBAD8B;MAEjCP,UAAU,EAAEM;IAFqB,CAAvB,CAAD,CAAX;EAID;;EAED,SAASE,aAAT,CAAuBC,CAAvB,EAA4C;IAC1CX,WAAW,CAAES,gBAAD,KAAuB,EACjC,GAAGA,gBAD8B;MAEjC,CAAEE,CAAC,CAACC,MAAH,CAA+BC,EAAhC,GAAqC,CAAEF,CAAC,CAACC,MAAH,CAA+BC;IAFpC,CAAvB,CAAD,CAAX;EAID;;EAED,SAASC,UAAT,GAAsB;IACpBhB,cAAc,CAAEiB,YAAD,IAAkB,CAACA,YAApB,CAAd;EACD;;EAED,oBACE;IAAA,WACGlB,WAAW,iBACV,QAAC,SAAD;MACE,UAAU,EAAEiB,UADd;MAEE,aAAa,EAAEJ,aAFjB;MAGE,gBAAgB,EAAEP,gBAHpB;MAIE,QAAQ,EAAEJ;IAJZ;MAAA;MAAA;MAAA;IAAA,QAFJ,EASG,CAACF,WAAD,iBAAgB,QAAC,QAAD;MAAU,UAAU,EAAEiB;IAAtB;MAAA;MAAA;MAAA;IAAA,QATnB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GA9CuBlB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}