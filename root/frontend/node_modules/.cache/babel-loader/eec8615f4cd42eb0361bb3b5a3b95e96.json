{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rydwan\\\\Documents\\\\GitHub\\\\snake\\\\src\\\\components\\\\GameSite\\\\GameField.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useGame from \"./useGame\";\nimport Popup from \"./Popup\";\nimport CountingDown from \"./CountingDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameField(props) {\n  _s();\n\n  const snakeIcon = new Image();\n  snakeIcon.src = \"textures/snakegraphics.png\";\n  const appleIcon = new Image();\n  appleIcon.src = \"textures/apple.png\";\n  const brickIcon = new Image();\n  brickIcon.src = \"textures/brick.png\";\n  const canvasRef = useRef(null);\n  const focusRef = useRef(null);\n  const {\n    gameDataRef,\n    handleKeyDown,\n    startGame,\n    setRunning,\n    disableCounting,\n    setNewLevel\n  } = useGame(render);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(gameDataRef.current.level);\n  const [isRunning, setIsRunning] = useState(gameDataRef.current.isRunning);\n  const [popup, setPopup] = useState({\n    isShown: false,\n    type: \"\"\n  });\n  const [isCounting, setIsCounting] = useState(true);\n  useEffect(() => {\n    setScore(gameDataRef.current.score);\n    setIsRunning(gameDataRef.current.isRunning);\n    setLevel(gameDataRef.current.level);\n    setPopup({ ...gameDataRef.current.popup\n    });\n    setIsCounting(gameDataRef.current.isCounting);\n    focusRef.current.focus();\n  }, [gameDataRef.current.snakePosition, gameDataRef.current.score, gameDataRef.current.isRunning, gameDataRef.current.level, gameDataRef.current.popup, gameDataRef.current.isCounting]);\n\n  function render(oldSnakePosition, newSnakePosition) {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 1024;\n    canvas.height = 1024;\n    let currentlyDrawnSnakePosition = 1;\n    console.log(currentlyDrawnSnakePosition);\n\n    const drawSnakeElements = (element, position) => {\n      let choosedElement = element[1];\n      let elementPosition = position;\n      ctx.drawImage(snakeIcon, choosedElement[0], choosedElement[1], 64, 64, elementPosition[0], elementPosition[1], 64, 64);\n    };\n\n    const chooseSnakeElement = () => {\n      const snakePosition = newSnakePosition;\n      const applePosition = gameDataRef.current.applePosition;\n      ctx.drawImage(appleIcon, 0, 0, 64, 64, applePosition[0], applePosition[1], 64, 64);\n\n      for (let i = 0; i < snakePosition.length; i++) {\n        let currentElement = snakePosition[i];\n        let nextElement = snakePosition[i - 1];\n        let previousElement = snakePosition[i + 1]; // head\n\n        if (nextElement === undefined) {\n          for (const [key, value] of Object.entries(IMAGES)) {\n            if (previousElement[0] - currentElement[0] === value[2] && previousElement[1] - currentElement[1] === value[3]) {\n              drawSnakeElements([key, value], snakePosition[i]);\n              break;\n            }\n          }\n        } // tail\n        else if (previousElement === undefined) {\n          for (const [key, value] of Object.entries(IMAGES)) {\n            if (nextElement[0] - currentElement[0] === value[4] && nextElement[1] - currentElement[1] === value[5]) {\n              drawSnakeElements([key, value], snakePosition[i]);\n              break;\n            }\n          }\n        } // something else\n        else if (nextElement && previousElement) {\n          for (const [key, value] of Object.entries(IMAGES)) {\n            if (previousElement[0] - currentElement[0] === value[2] && previousElement[1] - currentElement[1] === value[3] && nextElement[0] - currentElement[0] === value[4] && nextElement[1] - currentElement[1] === value[5] || previousElement[0] - currentElement[0] === value[4] && previousElement[1] - currentElement[1] === value[5] && nextElement[0] - currentElement[0] === value[2] && nextElement[1] - currentElement[1] === value[3]) {\n              drawSnakeElements([key, value], snakePosition[i]);\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    const drawBricks = () => {\n      const bricksPosition = gameDataRef.current.bricksPosition;\n\n      for (let i = 0; i < bricksPosition.length; i++) {\n        let brickPositionX = bricksPosition[i][0];\n        let brickPositionY = bricksPosition[i][1];\n        ctx.drawImage(brickIcon, 0, 0, 64, 64, brickPositionX, brickPositionY, 64, 64);\n      }\n    };\n\n    chooseSnakeElement();\n    drawBricks();\n    currentlyDrawnSnakePosition += 1;\n  }\n\n  const IMAGES = {\n    headTop: [192, 0, 0, 64, null, null],\n    headDown: [256, 64, 0, -64, null, null],\n    headRight: [256, 0, -64, 0, null, null],\n    headLeft: [192, 64, 64, 0, null, null],\n    tailTop: [192, 128, null, null, 0, -64],\n    tailDown: [256, 192, null, null, 0, 64],\n    tailRight: [256, 128, null, null, 64, 0],\n    tailLeft: [192, 192, null, null, -64, 0],\n    torsoHorizontal: [64, 0, -64, 0, 64, 0],\n    torsoVertical: [128, 64, 0, -64, 0, 64],\n    cornerTop: [0, 64, 64, 0, 0, -64],\n    cornerDown: [128, 0, -64, 0, 0, 64],\n    cornerLeft: [128, 128, 0, -64, -64, 0],\n    cornerRight: [0, 0, 0, 64, 64, 0]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-field\",\n    tabIndex: 1,\n    ref: focusRef,\n    onKeyDown: isRunning ? handleKeyDown : () => {},\n    children: [isCounting && /*#__PURE__*/_jsxDEV(CountingDown, {\n      setRunning: setRunning,\n      disableCounting: disableCounting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), popup.isShown && /*#__PURE__*/_jsxDEV(Popup, {\n      type: popup.type,\n      level: level,\n      changePage: props.changePage,\n      startGame: startGame,\n      setNewLevel: setNewLevel,\n      handleKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"apple\",\n        src: \"textures/apple.png\",\n        className: \"apple-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"level\",\n        src: \"https://cdn3.iconfinder.com/data/icons/game-competition-flat/64/15_Top_Player_game_competition-512.png\",\n        className: \"level-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: level\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-field\",\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameField, \"y0GPWBzq5hjmEJOVtp/s9gKHOk0=\", false, function () {\n  return [useGame];\n});\n\n_c = GameField;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameField\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useGame","Popup","CountingDown","GameField","props","snakeIcon","Image","src","appleIcon","brickIcon","canvasRef","focusRef","gameDataRef","handleKeyDown","startGame","setRunning","disableCounting","setNewLevel","render","score","setScore","level","setLevel","current","isRunning","setIsRunning","popup","setPopup","isShown","type","isCounting","setIsCounting","focus","snakePosition","oldSnakePosition","newSnakePosition","canvas","ctx","getContext","width","height","currentlyDrawnSnakePosition","console","log","drawSnakeElements","element","position","choosedElement","elementPosition","drawImage","chooseSnakeElement","applePosition","i","length","currentElement","nextElement","previousElement","undefined","key","value","Object","entries","IMAGES","drawBricks","bricksPosition","brickPositionX","brickPositionY","headTop","headDown","headRight","headLeft","tailTop","tailDown","tailRight","tailLeft","torsoHorizontal","torsoVertical","cornerTop","cornerDown","cornerLeft","cornerRight","changePage"],"sources":["C:/Users/rydwan/Documents/GitHub/snake/src/components/GameSite/GameField.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport useGame from \"./useGame\";\r\nimport Popup from \"./Popup\";\r\nimport CountingDown from \"./CountingDown\";\r\n\r\ninterface GameFieldProps {\r\n  changePage: () => void;\r\n}\r\n\r\nexport default function GameField(props: GameFieldProps) {\r\n  const snakeIcon = new Image();\r\n  snakeIcon.src = \"textures/snakegraphics.png\";\r\n  const appleIcon = new Image();\r\n  appleIcon.src = \"textures/apple.png\";\r\n  const brickIcon = new Image();\r\n  brickIcon.src = \"textures/brick.png\";\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const focusRef = useRef<HTMLInputElement>(null);\r\n\r\n  const {\r\n    gameDataRef,\r\n    handleKeyDown,\r\n    startGame,\r\n    setRunning,\r\n    disableCounting,\r\n    setNewLevel,\r\n  } = useGame(render);\r\n  const [score, setScore] = useState(0);\r\n  const [level, setLevel] = useState(gameDataRef.current.level);\r\n  const [isRunning, setIsRunning] = useState(gameDataRef.current.isRunning);\r\n  const [popup, setPopup] = useState({\r\n    isShown: false,\r\n    type: \"\",\r\n  });\r\n  const [isCounting, setIsCounting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setScore(gameDataRef.current.score);\r\n    setIsRunning(gameDataRef.current.isRunning);\r\n    setLevel(gameDataRef.current.level);\r\n    setPopup({ ...gameDataRef.current.popup });\r\n    setIsCounting(gameDataRef.current.isCounting);\r\n    focusRef.current!.focus();\r\n  }, [\r\n    gameDataRef.current.snakePosition,\r\n    gameDataRef.current.score,\r\n    gameDataRef.current.isRunning,\r\n    gameDataRef.current.level,\r\n    gameDataRef.current.popup,\r\n    gameDataRef.current.isCounting,\r\n  ]);\r\n\r\n  function render(oldSnakePosition: number[][], newSnakePosition: number[][]) {\r\n    const canvas: HTMLCanvasElement = canvasRef.current!;\r\n    const ctx: any = canvas.getContext(\"2d\");\r\n    canvas.width = 1024;\r\n    canvas.height = 1024;\r\n\r\n    let currentlyDrawnSnakePosition = 1;\r\n    console.log(currentlyDrawnSnakePosition);\r\n\r\n    const drawSnakeElements = (\r\n      element: [string, number[] | (number | null)[]],\r\n      position: number[]\r\n    ) => {\r\n      let choosedElement = element[1];\r\n      let elementPosition = position;\r\n      ctx.drawImage(\r\n        snakeIcon,\r\n        choosedElement[0],\r\n        choosedElement[1],\r\n        64,\r\n        64,\r\n        elementPosition[0],\r\n        elementPosition[1],\r\n        64,\r\n        64\r\n      );\r\n    };\r\n\r\n    const chooseSnakeElement = () => {\r\n      const snakePosition = newSnakePosition;\r\n      const applePosition = gameDataRef.current.applePosition;\r\n      ctx.drawImage(\r\n        appleIcon,\r\n        0,\r\n        0,\r\n        64,\r\n        64,\r\n        applePosition[0],\r\n        applePosition[1],\r\n        64,\r\n        64\r\n      );\r\n      for (let i = 0; i < snakePosition.length; i++) {\r\n        let currentElement = snakePosition[i];\r\n        let nextElement = snakePosition[i - 1];\r\n        let previousElement = snakePosition[i + 1];\r\n        // head\r\n        if (nextElement === undefined) {\r\n          for (const [key, value] of Object.entries(IMAGES)) {\r\n            if (\r\n              previousElement[0] - currentElement[0] === value[2] &&\r\n              previousElement[1] - currentElement[1] === value[3]\r\n            ) {\r\n              drawSnakeElements([key, value], snakePosition[i]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // tail\r\n        else if (previousElement === undefined) {\r\n          for (const [key, value] of Object.entries(IMAGES)) {\r\n            if (\r\n              nextElement[0] - currentElement[0] === value[4] &&\r\n              nextElement[1] - currentElement[1] === value[5]\r\n            ) {\r\n              drawSnakeElements([key, value], snakePosition[i]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // something else\r\n        else if (nextElement && previousElement) {\r\n          for (const [key, value] of Object.entries(IMAGES)) {\r\n            if (\r\n              (previousElement[0] - currentElement[0] === value[2] &&\r\n                previousElement[1] - currentElement[1] === value[3] &&\r\n                nextElement[0] - currentElement[0] === value[4] &&\r\n                nextElement[1] - currentElement[1] === value[5]) ||\r\n              (previousElement[0] - currentElement[0] === value[4] &&\r\n                previousElement[1] - currentElement[1] === value[5] &&\r\n                nextElement[0] - currentElement[0] === value[2] &&\r\n                nextElement[1] - currentElement[1] === value[3])\r\n            ) {\r\n              drawSnakeElements([key, value], snakePosition[i]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const drawBricks = () => {\r\n      const bricksPosition = gameDataRef.current.bricksPosition;\r\n      for (let i = 0; i < bricksPosition.length; i++) {\r\n        let brickPositionX = bricksPosition[i][0];\r\n        let brickPositionY = bricksPosition[i][1];\r\n        ctx.drawImage(\r\n          brickIcon,\r\n          0,\r\n          0,\r\n          64,\r\n          64,\r\n          brickPositionX,\r\n          brickPositionY,\r\n          64,\r\n          64\r\n        );\r\n      }\r\n    };\r\n    chooseSnakeElement();\r\n    drawBricks();\r\n    currentlyDrawnSnakePosition += 1;\r\n  }\r\n\r\n  const IMAGES = {\r\n    headTop: [192, 0, 0, 64, null, null],\r\n    headDown: [256, 64, 0, -64, null, null],\r\n    headRight: [256, 0, -64, 0, null, null],\r\n    headLeft: [192, 64, 64, 0, null, null],\r\n    tailTop: [192, 128, null, null, 0, -64],\r\n    tailDown: [256, 192, null, null, 0, 64],\r\n    tailRight: [256, 128, null, null, 64, 0],\r\n    tailLeft: [192, 192, null, null, -64, 0],\r\n    torsoHorizontal: [64, 0, -64, 0, 64, 0],\r\n    torsoVertical: [128, 64, 0, -64, 0, 64],\r\n    cornerTop: [0, 64, 64, 0, 0, -64],\r\n    cornerDown: [128, 0, -64, 0, 0, 64],\r\n    cornerLeft: [128, 128, 0, -64, -64, 0],\r\n    cornerRight: [0, 0, 0, 64, 64, 0],\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"game-field\"\r\n      tabIndex={1}\r\n      ref={focusRef}\r\n      onKeyDown={isRunning ? handleKeyDown : () => {}}\r\n    >\r\n      {isCounting && (\r\n        <CountingDown\r\n          setRunning={setRunning}\r\n          disableCounting={disableCounting}\r\n        />\r\n      )}\r\n      {popup.isShown && (\r\n        <Popup\r\n          type={popup.type}\r\n          level={level}\r\n          changePage={props.changePage}\r\n          startGame={startGame}\r\n          setNewLevel={setNewLevel}\r\n          handleKeyDown={handleKeyDown}\r\n        />\r\n      )}\r\n      <div className=\"game-info\">\r\n        <img alt=\"apple\" src=\"textures/apple.png\" className=\"apple-icon\"></img>\r\n        <h1>{score}</h1>\r\n        <img\r\n          alt=\"level\"\r\n          src=\"https://cdn3.iconfinder.com/data/icons/game-competition-flat/64/15_Top_Player_game_competition-512.png\"\r\n          className=\"level-icon\"\r\n        ></img>\r\n        <h1>{level}</h1>\r\n      </div>\r\n      <div className=\"canvas-field\" tabIndex={0}>\r\n        <canvas ref={canvasRef}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}