{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport useGameLogic from \"./useGameLogic\";\nexport default function useGame(render) {\n  _s();\n\n  const gameLogic = useGameLogic();\n  const [gameData, setGameData] = useState(gameLogic.gameDataRef.current);\n  const renderFrequency = gameData.speed / 64;\n  console.log(\"renderfreuqnecy\", renderFrequency);\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      console.log(\"update\");\n      setGameData({ ...gameLogic.gameDataRef.current\n      });\n      gameLogic.update();\n      setGameData({ ...gameLogic.gameDataRef.current\n      });\n    }, gameData.speed);\n    return () => {\n      clearInterval(updateInterval);\n    };\n  }, []);\n  useEffect(() => {\n    const renderInterval = setInterval(() => {\n      console.log(\"render\");\n      render();\n    }, renderFrequency);\n    return () => clearInterval(renderInterval);\n  }, [gameData.snakePosition]);\n  return { ...gameLogic,\n    gameData\n  };\n}\n\n_s(useGame, \"HsxjgqhB5rg86Ito8al7KPnyzlw=\", false, function () {\n  return [useGameLogic];\n});","map":{"version":3,"names":["useEffect","useState","useGameLogic","useGame","render","gameLogic","gameData","setGameData","gameDataRef","current","renderFrequency","speed","console","log","updateInterval","setInterval","update","clearInterval","renderInterval","snakePosition"],"sources":["C:/Users/rydwan/Documents/GitHub/snake/src/components/GameSite/useGame.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport useGameLogic from \"./useGameLogic\";\r\n\r\nexport default function useGame(render: () => void) {\r\n  const gameLogic = useGameLogic();\r\n\r\n  const [gameData, setGameData] = useState(gameLogic.gameDataRef.current);\r\n\r\n  const renderFrequency = gameData.speed / 64;\r\n  console.log(\"renderfreuqnecy\", renderFrequency);\r\n\r\n  useEffect(() => {\r\n    const updateInterval = setInterval(() => {\r\n      console.log(\"update\");\r\n      setGameData({ ...gameLogic.gameDataRef.current });\r\n      gameLogic.update();\r\n      setGameData({ ...gameLogic.gameDataRef.current });\r\n    }, gameData.speed);\r\n\r\n    return () => {\r\n      clearInterval(updateInterval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const renderInterval = setInterval(() => {\r\n      console.log(\"render\");\r\n      render();\r\n    }, renderFrequency);\r\n    return () => clearInterval(renderInterval);\r\n  }, [gameData.snakePosition]);\r\n\r\n  return { ...gameLogic, gameData };\r\n}\r\n"],"mappings":";;AAAA;;AACA;AACA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,OAAT,CAAiBC,MAAjB,EAAqC;EAAA;;EAClD,MAAMC,SAAS,GAAGH,YAAY,EAA9B;EAEA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,SAAS,CAACG,WAAV,CAAsBC,OAAvB,CAAxC;EAEA,MAAMC,eAAe,GAAGJ,QAAQ,CAACK,KAAT,GAAiB,EAAzC;EACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,eAA/B;EAEAV,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvCH,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAN,WAAW,CAAC,EAAE,GAAGF,SAAS,CAACG,WAAV,CAAsBC;MAA3B,CAAD,CAAX;MACAJ,SAAS,CAACW,MAAV;MACAT,WAAW,CAAC,EAAE,GAAGF,SAAS,CAACG,WAAV,CAAsBC;MAA3B,CAAD,CAAX;IACD,CALiC,EAK/BH,QAAQ,CAACK,KALsB,CAAlC;IAOA,OAAO,MAAM;MACXM,aAAa,CAACH,cAAD,CAAb;IACD,CAFD;EAGD,CAXQ,EAWN,EAXM,CAAT;EAaAd,SAAS,CAAC,MAAM;IACd,MAAMkB,cAAc,GAAGH,WAAW,CAAC,MAAM;MACvCH,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAT,MAAM;IACP,CAHiC,EAG/BM,eAH+B,CAAlC;IAIA,OAAO,MAAMO,aAAa,CAACC,cAAD,CAA1B;EACD,CANQ,EAMN,CAACZ,QAAQ,CAACa,aAAV,CANM,CAAT;EAQA,OAAO,EAAE,GAAGd,SAAL;IAAgBC;EAAhB,CAAP;AACD;;GA9BuBH,O;UACJD,Y"},"metadata":{},"sourceType":"module"}