{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rydwan\\\\Documents\\\\GitHub\\\\snake\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport StartSite from \"./components/StartSite\";\nimport GameSite from \"./components/GameSite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isStartSite, setIsStartSite] = useState(true);\n  const [settings, setSettings] = useState({\n    audio: true,\n    difficulty: \"EASY\",\n    gamemode: \"\"\n  });\n\n  function changeDifficulty() {\n    const levels = [{\n      difficulty: \"EASY\",\n      speedPerLevel: 6,\n      bricksPerLevel: 4\n    }, {\n      difficulty: \"NORMAL\",\n      speedPerLevel: 12,\n      bricksPerLevel: 5\n    }, {\n      difficulty: \"HARD\",\n      speedPerLevel: 18,\n      bricksPerLevel: 6\n    }];\n    const currentLevel = levels.findIndex(element => element.difficulty === settings.difficulty);\n    const nextLevel = levels[currentLevel + 1] ? levels[currentLevel + 1].difficulty : levels[0].difficulty;\n    setSettings(previousSettings => ({ ...previousSettings,\n      difficulty: nextLevel\n    }));\n  }\n\n  function changeGamemode(selectedGamemode) {\n    setSettings(previousSettings => ({ ...previousSettings,\n      gamemode: selectedGamemode\n    }));\n  }\n\n  function toggleSetting(e) {\n    console.log(e.target.name === \"audio\");\n    setSettings(previousSettings => ({ ...previousSettings,\n      [e.target.name]: !previousSettings[e.target.name]\n    }));\n  }\n\n  function changePage() {\n    setIsStartSite(previousPage => !previousPage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isStartSite && /*#__PURE__*/_jsxDEV(StartSite, {\n      changePage: changePage,\n      changeDifficulty: changeDifficulty,\n      toggleSetting: toggleSetting,\n      changeGamemode: changeGamemode,\n      settings: settings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), !isStartSite && /*#__PURE__*/_jsxDEV(GameSite, {\n      changePage: changePage,\n      settings: settings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FzoeyFio0FvD71XytYuqaOyPQSI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartSite","GameSite","App","isStartSite","setIsStartSite","settings","setSettings","audio","difficulty","gamemode","changeDifficulty","levels","speedPerLevel","bricksPerLevel","currentLevel","findIndex","element","nextLevel","previousSettings","changeGamemode","selectedGamemode","toggleSetting","e","console","log","target","name","changePage","previousPage"],"sources":["C:/Users/rydwan/Documents/GitHub/snake/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport StartSite from \"./components/StartSite\";\r\nimport GameSite from \"./components/GameSite\";\r\n\r\nexport default function App() {\r\n  const [isStartSite, setIsStartSite] = useState<boolean>(true);\r\n\r\n  interface SettingsType {\r\n    [key: string]: string | boolean;\r\n  }\r\n\r\n  const [settings, setSettings] = useState<SettingsType>({\r\n    audio: true,\r\n    difficulty: \"EASY\",\r\n    gamemode: \"\",\r\n  });\r\n\r\n  function changeDifficulty() {\r\n    const levels = [\r\n      {\r\n        difficulty: \"EASY\",\r\n        speedPerLevel: 6,\r\n        bricksPerLevel: 4,\r\n      },\r\n      {\r\n        difficulty: \"NORMAL\",\r\n        speedPerLevel: 12,\r\n        bricksPerLevel: 5,\r\n      },\r\n      {\r\n        difficulty: \"HARD\",\r\n        speedPerLevel: 18,\r\n        bricksPerLevel: 6,\r\n      },\r\n    ];\r\n    const currentLevel = levels.findIndex(\r\n      (element) => element.difficulty === settings.difficulty\r\n    );\r\n    const nextLevel = levels[currentLevel + 1]\r\n      ? levels[currentLevel + 1].difficulty\r\n      : levels[0].difficulty;\r\n    setSettings((previousSettings) => ({\r\n      ...previousSettings,\r\n      difficulty: nextLevel,\r\n    }));\r\n  }\r\n\r\n  function changeGamemode(selectedGamemode: string) {\r\n    setSettings((previousSettings) => ({\r\n      ...previousSettings,\r\n      gamemode: selectedGamemode,\r\n    }));\r\n  }\r\n\r\n  function toggleSetting(e: React.MouseEvent) {\r\n    console.log((e.target as HTMLInputElement).name === \"audio\");\r\n\r\n    setSettings((previousSettings) => ({\r\n      ...previousSettings,\r\n      [(e.target as HTMLInputElement).name]:\r\n        !previousSettings[(e.target as HTMLInputElement).name],\r\n    }));\r\n  }\r\n\r\n  function changePage() {\r\n    setIsStartSite((previousPage) => !previousPage);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isStartSite && (\r\n        <StartSite\r\n          changePage={changePage}\r\n          changeDifficulty={changeDifficulty}\r\n          toggleSetting={toggleSetting}\r\n          changeGamemode={changeGamemode}\r\n          settings={settings}\r\n        />\r\n      )}\r\n      {!isStartSite && <GameSite changePage={changePage} settings={settings} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAU,IAAV,CAA9C;EAMA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAe;IACrDQ,KAAK,EAAE,IAD8C;IAErDC,UAAU,EAAE,MAFyC;IAGrDC,QAAQ,EAAE;EAH2C,CAAf,CAAxC;;EAMA,SAASC,gBAAT,GAA4B;IAC1B,MAAMC,MAAM,GAAG,CACb;MACEH,UAAU,EAAE,MADd;MAEEI,aAAa,EAAE,CAFjB;MAGEC,cAAc,EAAE;IAHlB,CADa,EAMb;MACEL,UAAU,EAAE,QADd;MAEEI,aAAa,EAAE,EAFjB;MAGEC,cAAc,EAAE;IAHlB,CANa,EAWb;MACEL,UAAU,EAAE,MADd;MAEEI,aAAa,EAAE,EAFjB;MAGEC,cAAc,EAAE;IAHlB,CAXa,CAAf;IAiBA,MAAMC,YAAY,GAAGH,MAAM,CAACI,SAAP,CAClBC,OAAD,IAAaA,OAAO,CAACR,UAAR,KAAuBH,QAAQ,CAACG,UAD1B,CAArB;IAGA,MAAMS,SAAS,GAAGN,MAAM,CAACG,YAAY,GAAG,CAAhB,CAAN,GACdH,MAAM,CAACG,YAAY,GAAG,CAAhB,CAAN,CAAyBN,UADX,GAEdG,MAAM,CAAC,CAAD,CAAN,CAAUH,UAFd;IAGAF,WAAW,CAAEY,gBAAD,KAAuB,EACjC,GAAGA,gBAD8B;MAEjCV,UAAU,EAAES;IAFqB,CAAvB,CAAD,CAAX;EAID;;EAED,SAASE,cAAT,CAAwBC,gBAAxB,EAAkD;IAChDd,WAAW,CAAEY,gBAAD,KAAuB,EACjC,GAAGA,gBAD8B;MAEjCT,QAAQ,EAAEW;IAFuB,CAAvB,CAAD,CAAX;EAID;;EAED,SAASC,aAAT,CAAuBC,CAAvB,EAA4C;IAC1CC,OAAO,CAACC,GAAR,CAAaF,CAAC,CAACG,MAAH,CAA+BC,IAA/B,KAAwC,OAApD;IAEApB,WAAW,CAAEY,gBAAD,KAAuB,EACjC,GAAGA,gBAD8B;MAEjC,CAAEI,CAAC,CAACG,MAAH,CAA+BC,IAAhC,GACE,CAACR,gBAAgB,CAAEI,CAAC,CAACG,MAAH,CAA+BC,IAAhC;IAHc,CAAvB,CAAD,CAAX;EAKD;;EAED,SAASC,UAAT,GAAsB;IACpBvB,cAAc,CAAEwB,YAAD,IAAkB,CAACA,YAApB,CAAd;EACD;;EAED,oBACE;IAAA,WACGzB,WAAW,iBACV,QAAC,SAAD;MACE,UAAU,EAAEwB,UADd;MAEE,gBAAgB,EAAEjB,gBAFpB;MAGE,aAAa,EAAEW,aAHjB;MAIE,cAAc,EAAEF,cAJlB;MAKE,QAAQ,EAAEd;IALZ;MAAA;MAAA;MAAA;IAAA,QAFJ,EAUG,CAACF,WAAD,iBAAgB,QAAC,QAAD;MAAU,UAAU,EAAEwB,UAAtB;MAAkC,QAAQ,EAAEtB;IAA5C;MAAA;MAAA;MAAA;IAAA,QAVnB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA9EuBH,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}